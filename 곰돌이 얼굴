#include <windows.h>
#include <GL/glut.h>
GLfloat cameraX = 0.0, cameraY = 3.5, focusX = 0.0, focusY = 0.0, focusZ = 0.0;

void MyDisplay() {
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();

	glColor3f(0.5, 0.4, 0.3); //얼굴
	glutSolidSphere(0.2, 20, 16);
	glPushMatrix();
	glTranslatef(0.03, 0.05, 0.0);

	glColor3f(0.0, 0.0, 0.0); //입
	glBegin(GL_LINE_STRIP);
	glVertex2f(0.0, -0.08);
	glVertex2f(-0.1, -0.07); 
	glEnd();
	
	glColor3f(0.0, 0.0, 0.0); //오른쪽 눈
	glutSolidSphere(0.01, 20, 16);
	glPushMatrix();
	glTranslatef(-0.12, 0.02, 0.0);

	glColor3f(0.0, 0.0, 0.0); //왼쪽 눈
	glutSolidSphere(0.01, 20, 16);
	glPushMatrix();
	glTranslatef(0.0, 0.15, 0.0);

	glColor3f(0.5, 0.4, 0.3); //왼쪽귀
	glutSolidSphere(0.1, 20, 16);
	glPushMatrix();
	glTranslatef(0.23, -0.02, 0.0);

	glColor3f(0.5, 0.4, 0.3); //오른귀
	glutSolidSphere(0.1, 20, 16);
	glPushMatrix();
	glTranslatef(0.2, 0.5, 0.0);

	gluLookAt(cameraX, cameraY, 3.5, focusX, focusY, focusZ, 0.0, 1.0, 0.0);

	glPopMatrix();
	glutSwapBuffers();
}

void MyTimer(int value) {
	cameraX = cameraX + 1.0;
}

void MyKeyboard(unsigned char key, int x, int y) {
	switch (key) {
	case 'a':
		cameraX = cameraX + 1.0;
		glutTimerFunc(10, MyTimer, 1);
		break;
	case 'b':
		cameraY = cameraY + 1.0;
		break;
	default:
		break;
	}
	glutPostRedisplay();
}


int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(800, 500);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("My Project");
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glutDisplayFunc(MyDisplay);
	glutKeyboardFunc(MyKeyboard);

	glutMainLoop();
	return 0;
}
